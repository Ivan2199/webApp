{"ast":null,"code":"useEffect(() => {\n  const fetchProfileData = async () => {\n    try {\n      // Fetch the profile data for the logged-in user\n      const token = localStorage.getItem(\"token\"); // Get the JWT token from localStorage or wherever it is stored\n      if (!token) {\n        throw new Error(\"No token found\");\n      }\n      const response = await axios.get(\"http://localhost:8000/user/getLoggedInUser\", {\n        headers: {\n          Authorization: token\n        }\n      });\n      const loggedInUserID = response.data.userId; // Access the userId property from the response data\n\n      console.log(loggedInUserID);\n\n      // Use the user ID to fetch the profile data\n      const profileResponse = await axios.get(`http://localhost:8000/user/getuser/${loggedInUserID}`);\n      setProfileData(profileResponse.data);\n    } catch (error) {\n      console.log(error);\n      // Add error handling logic here\n    }\n  };\n\n  fetchProfileData(); // Call the fetchProfileData function\n}, []); // Empty dependency array if you only want to fetch the data once","map":{"version":3,"names":["useEffect","fetchProfileData","token","localStorage","getItem","Error","response","axios","get","headers","Authorization","loggedInUserID","data","userId","console","log","profileResponse","setProfileData","error"],"sources":["C:/Users/ivana/Desktop/Footer/client/src/components/Profile.js"],"sourcesContent":["useEffect(() => {\r\n  const fetchProfileData = async () => {\r\n    try {\r\n      // Fetch the profile data for the logged-in user\r\n      const token = localStorage.getItem(\"token\"); // Get the JWT token from localStorage or wherever it is stored\r\n      if (!token) {\r\n        throw new Error(\"No token found\");\r\n      }\r\n\r\n      const response = await axios.get(\r\n        \"http://localhost:8000/user/getLoggedInUser\",\r\n        {\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        }\r\n      );\r\n\r\n      const loggedInUserID = response.data.userId; // Access the userId property from the response data\r\n\r\n      console.log(loggedInUserID);\r\n\r\n      // Use the user ID to fetch the profile data\r\n      const profileResponse = await axios.get(\r\n        `http://localhost:8000/user/getuser/${loggedInUserID}`\r\n      );\r\n\r\n      setProfileData(profileResponse.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      // Add error handling logic here\r\n    }\r\n  };\r\n\r\n  fetchProfileData(); // Call the fetchProfileData function\r\n}, []); // Empty dependency array if you only want to fetch the data once\r\n"],"mappings":"AAAAA,SAAS,CAAC,MAAM;EACd,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF;MACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC7C,IAAI,CAACF,KAAK,EAAE;QACV,MAAM,IAAIG,KAAK,CAAC,gBAAgB,CAAC;MACnC;MAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAC9B,4CAA4C,EAC5C;QACEC,OAAO,EAAE;UACPC,aAAa,EAAER;QACjB;MACF,CACF,CAAC;MAED,MAAMS,cAAc,GAAGL,QAAQ,CAACM,IAAI,CAACC,MAAM,CAAC,CAAC;;MAE7CC,OAAO,CAACC,GAAG,CAACJ,cAAc,CAAC;;MAE3B;MACA,MAAMK,eAAe,GAAG,MAAMT,KAAK,CAACC,GAAG,CACpC,sCAAqCG,cAAe,EACvD,CAAC;MAEDM,cAAc,CAACD,eAAe,CAACJ,IAAI,CAAC;IACtC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;MAClB;IACF;EACF,CAAC;;EAEDjB,gBAAgB,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}